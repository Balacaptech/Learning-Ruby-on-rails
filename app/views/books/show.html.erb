<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Add Book</title>

  <%= csrf_meta_tags %>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  
  <!-- Toastify CSS -->
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
</head>
<body>
<nav class="navbar navbar-light bg-white shadow-sm position-fixed top-0 end-0 w-100 px-4 py-2" style="z-index: 1030;">
  <div class="container-fluid justify-content-end">
    <div class="dropdown">
      <img id="user-avatar" 
           src="https://via.placeholder.com/40x40?text=U" 
           class="rounded-circle shadow-sm me-2" 
           width="40" height="40" 
           alt="User Avatar" 
           role="button" 
           data-bs-toggle="dropdown" 
           aria-expanded="false">
      <ul class="dropdown-menu dropdown-menu-end text-small shadow" aria-labelledby="profileDropdown" style="min-width: 180px;">
        <li>
          <a class="dropdown-item" href="/profile">
            <i class="bi bi-person me-2"></i> My Profile
          </a>
        </li>
        <li><hr class="dropdown-divider"></li>
        <li class="text-center px-3 pb-2">
          <button id="logoutBtn" type="button" class="btn btn-outline-danger w-100">
            <i class="bi bi-box-arrow-right me-1"></i> Logout
          </button>
        </li>
      </ul>
    </div>
  </div>
</nav>

<div class="container mt-5 pt-5">
  <h2 class="mb-4">Add New Book</h2>

  <form id="bookForm">
    <div class="mb-3">
      <label for="title" class="form-label">Title *</label>
      <input type="text" class="form-control" id="title" required />
    </div>

    <div class="mb-3">
      <label for="author" class="form-label">Author *</label>
      <input type="text" class="form-control" id="author" required />
    </div>

    <div class="mb-3">
      <label for="description" class="form-label">Description</label>
      <textarea class="form-control" id="description" rows="3" required></textarea>
    </div>
    
    <div class="mb-3">
      <label for="formFileMultiple" class="form-label">Profile Image</label>
      <input class="form-control" type="file" id="formFileMultiple" accept="image/*">
    </div>

    <div class="mb-3">
      <label for="price" class="form-label">Price</label>
      <input type="number" step="0.01" class="form-control" id="price" required />
    </div>

    <div id="image-preview-container" class="mb-3"></div>

    <button type="submit" class="btn btn-primary">Add Book</button>
    <a href="/books" class="btn btn-secondary ms-2">Back to List</a>
  </form>
</div>

<!-- JS includes -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
  const userId = localStorage.getItem('user_id');
  
  console.log("user_id", userId);
  if (!userId) {
    window.location.href = '/login';
  }

  const apiBase = `/api/users/${userId}/books`;

  function showToast(message, type = "success") {
    Toastify({
      text: message,
      duration: 3000,
      gravity: "top",
      position: "right",
      backgroundColor: type === "success" ? "#198754" : "#dc3545",
      close: true
    }).showToast();
  }

  function logoutUser() {
    localStorage.removeItem('user_id');
    showToast("Logged out successfully", "success");
    setTimeout(() => window.location.href = '/login', 800);
  }

  document.getElementById('logoutBtn')?.addEventListener('click', logoutUser);

  async function fetchUserAvatar(userId) {
    try {
      const response = await fetch(`/api/users/${userId}`);
      const data = await response.json();
      const avatarImg = document.getElementById("user-avatar");
      if (avatarImg && data.avatar_url) {
        avatarImg.src = data.avatar_url;
      } else {
        avatarImg.src = "/assets/default-avatar.png"; // fallback image in /public/assets
      }
    } catch (error) {
      console.error("Error fetching avatar:", error);
    }
  }

  if (userId) fetchUserAvatar(userId);

  document.getElementById('bookForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const title = document.getElementById('title').value.trim();
    const author = document.getElementById('author').value.trim();
    const description = document.getElementById('description').value.trim();
    const price = document.getElementById('price').value.trim();
    const fileInput = document.getElementById("formFileMultiple");
    const file = fileInput?.files[0];

    if (title.length < 4 || author.length < 4 || description.length < 4) {
      showToast("All fields must be at least 4 characters long.", "error");
      return;
    }

    if (isNaN(price) || Number(price) <= 0) {
      showToast("Price must be a valid positive number", "error");
      return;
    }

    const formData = new FormData();
    formData.append("title", title);
    formData.append("author", author);
    formData.append("description", description);
    formData.append("price", price);
    if (file) {
      formData.append("file", file);
    }

    try {
      const response = await fetch(apiBase, {
        method: 'POST',
        body: formData
      });

      const result = await response.json();
      console.log("API Result:", result);

     if (response.ok) {
    showToast('Book added successfully!', 'success');
    document.getElementById('bookForm').reset();

    // âœ… No preview image logic here
    setTimeout(() => {
      window.location.href = '/books';
    }, 1000);
  }
 else {
        const errorMsg = result.errors ? result.errors.join(', ') : 'Failed to add book';
        showToast(errorMsg, 'error');
      }
    } catch (error) {
      console.error('Network error:', error);
      showToast('Network error while adding book', 'error');
    }
  });
</script>
</body>
</html>
