<!DOCTYPE html>
<html>
<head>
  <title>User Profile</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="csrf-token" content="PLACE_CSRF_TOKEN_HERE" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
</head>
<body>

<!-- Top Navbar -->
<nav class="navbar navbar-light bg-white shadow-sm position-fixed top-0 end-0 w-100 px-4 py-2" style="z-index: 1030;">
  <div class="container-fluid justify-content-end">
    <div class="dropdown">
      <img id="navbar-avatar" 
           src="https://via.placeholder.com/40x40?text=U" 
           class="rounded-circle shadow-sm me-2" 
           width="40" height="40" 
           alt="User Avatar" 
           role="button" 
           data-bs-toggle="dropdown" 
           aria-expanded="false">
      <ul class="dropdown-menu dropdown-menu-end text-small shadow" aria-labelledby="navbar-avatar" style="min-width: 180px;">
        <li>
          <a class="dropdown-item" href="/profile">
            <i class="bi bi-person me-2"></i> My Profile
          </a>
        </li>
        <li><hr class="dropdown-divider"></li>
        <li class="text-center px-3 pb-2">
          <button id="logoutBtn" type="button" class="btn btn-outline-danger w-100">
            <i class="bi bi-box-arrow-right me-1"></i> Logout
          </button>
        </li>
      </ul>
    </div>
  </div>
</nav>

<br><br><br>

<div class="container mt-5">
  <h2>User Profile</h2>
  <div id="user-profile" class="card p-4 shadow-sm mb-4 text-center bg-light">
    <h4 class="mb-3">User Profile</h4>

    <div style="position: relative; width: 150px; height: 150px; margin: 0 auto;">
      <img id="profile-avatar" src="" alt="User Avatar"
           width="150" height="150"
           class="mb-3 rounded-circle border shadow d-block"
           style="background-color: white;">
      <div id="avatar-loader" style="position: absolute; top: 50%; left: 50%;
                  transform: translate(-50%, -50%);
                  width: 50px; height: 50px;
                  border: 6px solid #f3f3f3;
                  border-top: 6px solid #3498db;
                  border-radius: 50%;
                  animation: spin 1s linear infinite;"></div>
    </div>

    <p><strong>Name:</strong> <span id="user-name"></span></p>
    <p><strong>Email:</strong> <span id="user-email"></span></p>
    <p><strong>Mobile Number:</strong> <span id="user-mobile"></span></p>

    <div class="text-center mt-4">
      <button class="btn btn-primary px-4" style="width: 100px;" onclick="showEditForm()">Edit</button>
    </div>
  </div>

  <div id="edit-form" class="card p-4 shadow-sm mb-4" style="display: none;">
    <h4 class="mb-3">Edit Profile</h4>
    <form id="profileForm">
      <div class="mb-3">
        <label for="edit-name" class="form-label">Name</label>
        <input type="text" class="form-control" id="edit-name" required>
      </div>
      <div class="mb-3">
        <label for="edit-email" class="form-label">Email</label>
        <input type="email" class="form-control" id="edit-email" required>
      </div>
      <div class="mb-3">
        <label for="edit-mobile" class="form-label">Mobile Number</label>
        <input type="text" class="form-control" id="edit-mobile" required>
      </div>
      <div class="mb-3">
        <label for="edit-avatar" class="form-label">Change Avatar</label>
        <input type="file" class="form-control" id="edit-avatar" accept="image/*">
        <div class="mt-2">
          <label class="form-label">Current Avatar:</label><br>
          <img id="current-avatar-preview" src="" width="100" height="100" class="rounded-circle border shadow-sm">
        </div>
      </div>
      <button type="submit" class="btn btn-success">Update</button>
      <button type="button" class="btn btn-secondary" onclick="hideEditForm()">Cancel</button>
    </form>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
  const userId = localStorage.getItem("user_id");
  let originalAvatarUrl = "";

  function showToast(message, type = "success") {
    Toastify({
      text: message,
      duration: 3000,
      gravity: "top",
      position: "right",
      backgroundColor: type === "success" ? "#28a745" : "#dc3545",
      close: true
    }).showToast();
  }

  async function fetchUserProfile() {
    try {
      const response = await fetch(`/api/users/${userId}`);
      const data = await response.json();

      document.getElementById("user-name").textContent = data.name;
      document.getElementById("user-email").textContent = data.email;
      document.getElementById("user-mobile").textContent = data.mobile_number;

      originalAvatarUrl = data.avatar_url || "https://via.placeholder.com/150?text=No+Image";
      document.getElementById("profile-avatar").src = originalAvatarUrl;
      document.getElementById("current-avatar-preview").src = originalAvatarUrl;
      document.getElementById("navbar-avatar").src = originalAvatarUrl;

      document.getElementById("edit-name").value = data.name;
      document.getElementById("edit-email").value = data.email;
      document.getElementById("edit-mobile").value = data.mobile_number;
    } catch (error) {
      showToast("Failed to load profile", "error");
    }
  }

  function showEditForm() {
    document.getElementById("edit-form").style.display = "block";
    document.getElementById("user-profile").style.display = "none";
  }

  function hideEditForm() {
    document.getElementById("edit-form").style.display = "none";
    document.getElementById("user-profile").style.display = "block";
    document.getElementById("edit-avatar").value = null;
    document.getElementById("current-avatar-preview").src = originalAvatarUrl;
  }

  document.getElementById("edit-avatar").addEventListener("change", (e) => {
    const file = e.target.files[0];
    if (file) {
      const previewURL = URL.createObjectURL(file);
      document.getElementById("current-avatar-preview").src = previewURL;
    }
  });

  document.getElementById("profileForm").addEventListener("submit", async (e) => {
    e.preventDefault();

    const name = document.getElementById("edit-name").value;
    const email = document.getElementById("edit-email").value;
    const mobile = document.getElementById("edit-mobile").value;
    const avatarFile = document.getElementById("edit-avatar").files[0];

    const formData = new FormData();
    formData.append("name", name);
    formData.append("email", email);
    formData.append("mobile_number", mobile);
    if (avatarFile) formData.append("avatar", avatarFile);

    try {
      const response = await fetch(`/api/users/${userId}`, {
        method: "PUT",
        body: formData
      });

      if (!response.ok) throw new Error("Update failed");

      showToast("Profile updated", "success");
      await fetchUserProfile();
      hideEditForm();
    } catch (error) {
      showToast("Failed to update profile", "error");
    }
  });

  document.getElementById("profile-avatar").onload = function () {
    document.getElementById("avatar-loader").style.display = "none";
  };

  const spinStyle = document.createElement("style");
  spinStyle.innerHTML = `
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  `;
  document.head.appendChild(spinStyle);

  window.addEventListener('pageshow', function () {
    const userId = localStorage.getItem('user_id');
    if (!userId) {
      window.location.href = '/login';
    }
  });
  
  async function logoutUser() {
    try {
      const csrfMeta = document.querySelector('meta[name="csrf-token"]');
      const csrfToken = csrfMeta ? csrfMeta.getAttribute('content') : null;

      const response = await fetch('/api/logout', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          ...(csrfToken && { 'X-CSRF-Token': csrfToken })
        },
        credentials: 'include'
      });

      const result = await response.json();

      if (response.ok) {
        showToast("Logged out successfully", "success");
        localStorage.removeItem('user_id');
        window.location.href = '/login';
      } else {
        showToast(result.message || "Logout failed", "error");
      }
    } catch (error) {
      showToast("Logout failed due to JS error", "error");
    }
  }

  document.getElementById("logoutBtn").addEventListener("click", logoutUser);

  fetchUserProfile();
</script>

</body>
</html>
